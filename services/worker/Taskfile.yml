version: "3"

# Worker Service Taskfile
# Handles background worker service tasks

vars:
  SERVICE_NAME: worker
  PYTHON_SRC: worker

tasks:
  default:
    desc: "Show available tasks (default command)"
    cmds:
      - task --list

  deps:
    desc: "Install dependencies for worker service (production only)"
    cmds:
      - uv sync

  deps:dev:
    desc: "Install development dependencies for worker service"
    cmds:
      - uv sync --extra dev

  sync:
    desc: "Sync exact dependencies from lock files"
    cmds:
      - uv sync --frozen

  db:setup:
    desc: "Setup PostgreSQL database"
    cmds:
      - echo "Make sure PostgreSQL is running and create database:"
      - echo "createdb task_management"
      - echo "Or set DATABASE_URL environment variable"

  run:
    desc: "Run the worker service"
    aliases: [run:dev, dev]
    cmds:
      - uv run python -m {{.PYTHON_SRC}}.main

  run:auto-shutdown:
    desc: "Run the worker service with auto-shutdown enabled"
    cmds:
      - uv run python -m {{.PYTHON_SRC}}.main --auto-shutdown

  lint:
    desc: "Run linting and formatting for worker service"
    deps: [format]
    cmds:
      - task: deps:dev
      - uv run ruff check {{.PYTHON_SRC}} --fix
      - uv run ruff format {{.PYTHON_SRC}}

  format:
    desc: "Format code only"
    cmds:
      - task: deps:dev
      - uv run ruff format {{.PYTHON_SRC}}

  test:
    desc: "Run tests for worker service"
    cmds:
      - uv sync --extra dev
      - uv run pytest tests/ -v
    status:
      - test -d tests

  test:unit:
    desc: "Run unit tests for worker service"
    cmds:
      - task: test

  build:
    desc: "Build worker service package (production dependencies only)"
    cmds:
      - uv build # todo - this will need to change.

  clean:
    desc: "Clean build artifacts for worker"
    cmds:
      - rm -rf dist/ build/ .pytest_cache/
      - find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true

