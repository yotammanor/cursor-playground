version: "3"

# Worker Service Taskfile
# Handles Celery worker service tasks

vars:
  SERVICE_NAME: worker
  PYTHON_SRC: worker
  TESTS_DIR: tests

tasks:
  default:
    desc: "Show available tasks (default command)"
    cmds:
      - task --list

  deps:
    desc: "Install dependencies for worker service"
    cmds:
      - echo "📦 Installing dependencies for {{.SERVICE_NAME}}..."
      - uv sync --all-groups

  sync:
    desc: "Sync exact dependencies from lock files"
    cmds:
      - echo "🔒 Syncing dependencies for {{.SERVICE_NAME}}..."
      - uv sync --frozen

  test:
    desc: "Run tests for worker service"
    cmds:
      - echo "🧪 Testing {{.SERVICE_NAME}}..."
      - uv run pytest {{.TESTS_DIR}}/ -v

  test:unit:
    desc: "Run unit tests for worker service"
    cmds:
      - task: test

  lint:
    desc: "Run linting and formatting for worker service"
    cmds:
      - echo "🔍 Linting {{.SERVICE_NAME}}..."
      - uv run ruff check {{.PYTHON_SRC}} {{.TESTS_DIR}}
      - uv run ruff format {{.PYTHON_SRC}} {{.TESTS_DIR}}

  lint:check:
    desc: "Check linting without fixing"
    cmds:
      - echo "🔍 Checking lint for {{.SERVICE_NAME}}..."
      - uv run ruff check {{.PYTHON_SRC}} {{.TESTS_DIR}} --diff
      - uv run ruff format {{.PYTHON_SRC}} {{.TESTS_DIR}} --diff

  run:
    desc: "Run the worker service"
    cmds:
      - echo "🚀 Starting {{.SERVICE_NAME}}..."
      - uv run celery -A {{.PYTHON_SRC}}.main worker --loglevel=info

  run:dev:
    desc: "Run the worker service in development mode"
    cmds:
      - echo "🚀 Starting {{.SERVICE_NAME}} in development mode..."
      - uv run celery -A {{.PYTHON_SRC}}.main worker --loglevel=debug --reload

  monitor:
    desc: "Monitor the worker service"
    cmds:
      - echo "📊 Monitoring {{.SERVICE_NAME}}..."
      - uv run celery -A {{.PYTHON_SRC}}.main flower

  build:
    desc: "Build worker service package"
    cmds:
      - echo "🏗️ Building {{.SERVICE_NAME}} package..."
      - uv build

  clean:
    desc: "Clean build artifacts for worker"
    cmds:
      - echo "🧹 Cleaning {{.SERVICE_NAME}} artifacts..."
      - rm -rf dist/ build/ .pytest_cache/
      - find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true

