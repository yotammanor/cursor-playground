version: "3"

# Worker Service Taskfile
# Handles background worker service tasks

vars:
  SERVICE_NAME: worker
  PYTHON_SRC: worker

tasks:
  default:
    desc: "Show available tasks (default command)"
    cmds:
      - task --list

  deps:
    desc: "Install dependencies for worker service"
    cmds:
      - echo "📦 Installing dependencies for {{.SERVICE_NAME}}..."
      - uv sync --all-groups

  deps:dev:
    desc: "Install development dependencies for worker service"
    cmds:
      - echo "🔧 Installing development dependencies for {{.SERVICE_NAME}}..."
      - uv sync --all-groups

  sync:
    desc: "Sync exact dependencies from lock files"
    cmds:
      - echo "🔒 Syncing dependencies for {{.SERVICE_NAME}}..."
      - uv sync --frozen

  db:setup:
    desc: "Setup PostgreSQL database"
    cmds:
      - echo "🗄️ Setting up database for {{.SERVICE_NAME}}..."
      - echo "Make sure PostgreSQL is running and create database:"
      - echo "createdb task_management"
      - echo "Or set DATABASE_URL environment variable"

  run:
    desc: "Run the worker service"
    cmds:
      - echo "🚀 Starting {{.SERVICE_NAME}}..."
      - uv run python -m {{.PYTHON_SRC}}.main

  run:celery:
    desc: "Run the worker service with Celery"
    cmds:
      - echo "🚀 Starting {{.SERVICE_NAME}} with Celery..."
      - uv run celery -A {{.PYTHON_SRC}}.main.celery_app worker --loglevel=info

  lint:
    desc: "Run linting and formatting for worker service"
    cmds:
      - echo "🔍 Linting {{.SERVICE_NAME}}..."
      - task: deps:dev
      - uv run ruff check {{.PYTHON_SRC}} --fix
      - uv run ruff format {{.PYTHON_SRC}}

  lint:check:
    desc: "Check linting without fixing"
    cmds:
      - echo "🔍 Checking lint for {{.SERVICE_NAME}}..."
      - task: deps:dev
      - uv run ruff check {{.PYTHON_SRC}} --diff
      - uv run ruff format {{.PYTHON_SRC}} --diff

  format:
    desc: "Format code only"
    cmds:
      - echo "🎨 Formatting {{.SERVICE_NAME}}..."
      - task: deps:dev
      - uv run ruff format {{.PYTHON_SRC}}

  build:
    desc: "Build worker service package"
    cmds:
      - echo "🏗️ Building {{.SERVICE_NAME}} package..."
      - uv build

  clean:
    desc: "Clean build artifacts for worker"
    cmds:
      - echo "🧹 Cleaning {{.SERVICE_NAME}} artifacts..."
      - rm -rf dist/ build/ .pytest_cache/
      - find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true

